// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Riddle.Warehouse.TestCases.DataAccess.Data;

#nullable disable

namespace Riddle.Bank.TestCases.DataAccess.Migrations
{
    [DbContext(typeof(BankTestCasesDbContext))]
    [Migration("20240826122627_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Riddle.Bank.Models.Account", b =>
                {
                    b.Property<int>("AccountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountID"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BranchID")
                        .HasColumnType("int");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOpened")
                        .HasColumnType("datetime2");

                    b.HasKey("AccountID");

                    b.HasIndex("BranchID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            AccountID = 1,
                            AccountNumber = "AC123456789",
                            AccountType = "Checking",
                            Balance = 1500.75m,
                            BranchID = 1,
                            CustomerID = 1,
                            DateOpened = new DateTime(2022, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AccountID = 2,
                            AccountNumber = "AC987654321",
                            AccountType = "Savings",
                            Balance = 3200.50m,
                            BranchID = 2,
                            CustomerID = 2,
                            DateOpened = new DateTime(2023, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AccountID = 3,
                            AccountNumber = "AC456789123",
                            AccountType = "Checking",
                            Balance = 800.25m,
                            BranchID = 1,
                            CustomerID = 3,
                            DateOpened = new DateTime(2021, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AccountID = 4,
                            AccountNumber = "AC321654987",
                            AccountType = "Business",
                            Balance = 50000.00m,
                            BranchID = 3,
                            CustomerID = 4,
                            DateOpened = new DateTime(2020, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AccountID = 5,
                            AccountNumber = "AC654321789",
                            AccountType = "Savings",
                            Balance = 1500.00m,
                            BranchID = 2,
                            CustomerID = 5,
                            DateOpened = new DateTime(2024, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AccountID = 6,
                            AccountNumber = "AC111222333",
                            AccountType = "Checking",
                            Balance = 1200.00m,
                            BranchID = 1,
                            CustomerID = 6,
                            DateOpened = new DateTime(2022, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AccountID = 7,
                            AccountNumber = "AC444555666",
                            AccountType = "Savings",
                            Balance = 2000.00m,
                            BranchID = 2,
                            CustomerID = 7,
                            DateOpened = new DateTime(2023, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AccountID = 8,
                            AccountNumber = "AC777888999",
                            AccountType = "Business",
                            Balance = 7500.00m,
                            BranchID = 3,
                            CustomerID = 8,
                            DateOpened = new DateTime(2022, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AccountID = 9,
                            AccountNumber = "AC999888777",
                            AccountType = "Checking",
                            Balance = 3000.00m,
                            BranchID = 1,
                            CustomerID = 9,
                            DateOpened = new DateTime(2021, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AccountID = 10,
                            AccountNumber = "AC555444333",
                            AccountType = "Savings",
                            Balance = 1800.00m,
                            BranchID = 2,
                            CustomerID = 10,
                            DateOpened = new DateTime(2023, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Riddle.Bank.Models.Branch", b =>
                {
                    b.Property<int>("BranchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BranchID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("BranchID");

                    b.ToTable("Branches");

                    b.HasData(
                        new
                        {
                            BranchID = 1,
                            Address = "100 Main St",
                            BranchName = "Downtown Branch",
                            City = "Springfield",
                            Country = "USA",
                            PostalCode = "62701"
                        },
                        new
                        {
                            BranchID = 2,
                            Address = "200 North St",
                            BranchName = "Northside Branch",
                            City = "Springfield",
                            Country = "USA",
                            PostalCode = "62702"
                        },
                        new
                        {
                            BranchID = 3,
                            Address = "300 South St",
                            BranchName = "Southside Branch",
                            City = "Springfield",
                            Country = "USA",
                            PostalCode = "62703"
                        },
                        new
                        {
                            BranchID = 4,
                            Address = "400 East St",
                            BranchName = "Eastside Branch",
                            City = "Springfield",
                            Country = "USA",
                            PostalCode = "62704"
                        },
                        new
                        {
                            BranchID = 5,
                            Address = "500 West St",
                            BranchName = "Westside Branch",
                            City = "Springfield",
                            Country = "USA",
                            PostalCode = "62705"
                        });
                });

            modelBuilder.Entity("Riddle.Bank.Models.Card", b =>
                {
                    b.Property<int>("CardID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CardID"));

                    b.Property<int>("AccountID")
                        .HasColumnType("int");

                    b.Property<string>("CVV")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CardType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CardID");

                    b.HasIndex("AccountID");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            CardID = 1,
                            AccountID = 1,
                            CVV = "123",
                            CardNumber = "1234 5678 9012 3456",
                            CardType = "Visa",
                            ExpirationDate = new DateTime(2026, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CardID = 2,
                            AccountID = 2,
                            CVV = "456",
                            CardNumber = "9876 5432 1098 7654",
                            CardType = "MasterCard",
                            ExpirationDate = new DateTime(2025, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CardID = 3,
                            AccountID = 3,
                            CVV = "7890",
                            CardNumber = "4567 8901 2345 6789",
                            CardType = "American Express",
                            ExpirationDate = new DateTime(2027, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CardID = 4,
                            AccountID = 4,
                            CVV = "234",
                            CardNumber = "6789 0123 4567 8901",
                            CardType = "Discover",
                            ExpirationDate = new DateTime(2026, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CardID = 5,
                            AccountID = 5,
                            CVV = "567",
                            CardNumber = "8901 2345 6789 0123",
                            CardType = "Visa",
                            ExpirationDate = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Riddle.Bank.Models.CreditScore", b =>
                {
                    b.Property<int>("CreditScoreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CreditScoreID"));

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateChecked")
                        .HasColumnType("datetime2");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("CreditScoreID");

                    b.HasIndex("CustomerID");

                    b.ToTable("CreditScores");

                    b.HasData(
                        new
                        {
                            CreditScoreID = 1,
                            CustomerID = 1,
                            DateChecked = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Score = 750
                        },
                        new
                        {
                            CreditScoreID = 2,
                            CustomerID = 2,
                            DateChecked = new DateTime(2024, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Score = 680
                        },
                        new
                        {
                            CreditScoreID = 3,
                            CustomerID = 3,
                            DateChecked = new DateTime(2024, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Score = 720
                        },
                        new
                        {
                            CreditScoreID = 4,
                            CustomerID = 4,
                            DateChecked = new DateTime(2024, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Score = 690
                        },
                        new
                        {
                            CreditScoreID = 5,
                            CustomerID = 5,
                            DateChecked = new DateTime(2024, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Score = 710
                        });
                });

            modelBuilder.Entity("Riddle.Bank.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerID = 1,
                            Address = "123 Elm St",
                            City = "Springfield",
                            Country = "USA",
                            DateOfBirth = new DateTime(1985, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Phone = "555-1234",
                            PostalCode = "62701"
                        },
                        new
                        {
                            CustomerID = 2,
                            Address = "456 Oak St",
                            City = "Springfield",
                            Country = "USA",
                            DateOfBirth = new DateTime(1990, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane.smith@example.com",
                            FirstName = "Jane",
                            LastName = "Smith",
                            Phone = "555-5678",
                            PostalCode = "62702"
                        },
                        new
                        {
                            CustomerID = 3,
                            Address = "789 Pine St",
                            City = "Springfield",
                            Country = "USA",
                            DateOfBirth = new DateTime(1978, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "michael.johnson@example.com",
                            FirstName = "Michael",
                            LastName = "Johnson",
                            Phone = "555-8765",
                            PostalCode = "62703"
                        },
                        new
                        {
                            CustomerID = 4,
                            Address = "101 Maple St",
                            City = "Springfield",
                            Country = "USA",
                            DateOfBirth = new DateTime(1982, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "emily.davis@example.com",
                            FirstName = "Emily",
                            LastName = "Davis",
                            Phone = "555-4321",
                            PostalCode = "62704"
                        },
                        new
                        {
                            CustomerID = 5,
                            Address = "202 Birch St",
                            City = "Springfield",
                            Country = "USA",
                            DateOfBirth = new DateTime(1995, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "robert.brown@example.com",
                            FirstName = "Robert",
                            LastName = "Brown",
                            Phone = "555-9876",
                            PostalCode = "62705"
                        },
                        new
                        {
                            CustomerID = 6,
                            Address = "303 Cedar St",
                            City = "Springfield",
                            Country = "USA",
                            DateOfBirth = new DateTime(1988, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sophia.martinez@example.com",
                            FirstName = "Sophia",
                            LastName = "Martinez",
                            Phone = "555-6789",
                            PostalCode = "62706"
                        },
                        new
                        {
                            CustomerID = 7,
                            Address = "404 Walnut St",
                            City = "Springfield",
                            Country = "USA",
                            DateOfBirth = new DateTime(1975, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "james.garcia@example.com",
                            FirstName = "James",
                            LastName = "Garcia",
                            Phone = "555-2345",
                            PostalCode = "62707"
                        },
                        new
                        {
                            CustomerID = 8,
                            Address = "505 Spruce St",
                            City = "Springfield",
                            Country = "USA",
                            DateOfBirth = new DateTime(1992, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "olivia.rodriguez@example.com",
                            FirstName = "Olivia",
                            LastName = "Rodriguez",
                            Phone = "555-3456",
                            PostalCode = "62708"
                        },
                        new
                        {
                            CustomerID = 9,
                            Address = "606 Ash St",
                            City = "Springfield",
                            Country = "USA",
                            DateOfBirth = new DateTime(1980, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "liam.wilson@example.com",
                            FirstName = "Liam",
                            LastName = "Wilson",
                            Phone = "555-4567",
                            PostalCode = "62709"
                        },
                        new
                        {
                            CustomerID = 10,
                            Address = "707 Redwood St",
                            City = "Springfield",
                            Country = "USA",
                            DateOfBirth = new DateTime(1994, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "emma.lee@example.com",
                            FirstName = "Emma",
                            LastName = "Lee",
                            Phone = "555-5670",
                            PostalCode = "62710"
                        });
                });

            modelBuilder.Entity("Riddle.Bank.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<int>("BranchID")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EmployeeID");

                    b.HasIndex("BranchID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeID = 1,
                            BranchID = 1,
                            FirstName = "John",
                            HireDate = new DateTime(2015, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Smith",
                            Position = "Branch Manager",
                            Salary = 75000.00m
                        },
                        new
                        {
                            EmployeeID = 2,
                            BranchID = 2,
                            FirstName = "Alice",
                            HireDate = new DateTime(2018, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Johnson",
                            Position = "Teller",
                            Salary = 35000.00m
                        },
                        new
                        {
                            EmployeeID = 3,
                            BranchID = 3,
                            FirstName = "Charlie",
                            HireDate = new DateTime(2019, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Wilson",
                            Position = "Loan Officer",
                            Salary = 60000.00m
                        },
                        new
                        {
                            EmployeeID = 4,
                            BranchID = 1,
                            FirstName = "Diana",
                            HireDate = new DateTime(2022, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Taylor",
                            Position = "Customer Service",
                            Salary = 40000.00m
                        },
                        new
                        {
                            EmployeeID = 5,
                            BranchID = 2,
                            FirstName = "Edward",
                            HireDate = new DateTime(2020, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Anderson",
                            Position = "Financial Advisor",
                            Salary = 65000.00m
                        },
                        new
                        {
                            EmployeeID = 6,
                            BranchID = 3,
                            FirstName = "Fiona",
                            HireDate = new DateTime(2018, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Clark",
                            Position = "Loan Officer",
                            Salary = 62000.00m
                        },
                        new
                        {
                            EmployeeID = 7,
                            BranchID = 4,
                            FirstName = "George",
                            HireDate = new DateTime(2021, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Roberts",
                            Position = "Teller",
                            Salary = 36000.00m
                        },
                        new
                        {
                            EmployeeID = 8,
                            BranchID = 5,
                            FirstName = "Hannah",
                            HireDate = new DateTime(2017, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Lopez",
                            Position = "Branch Manager",
                            Salary = 77000.00m
                        },
                        new
                        {
                            EmployeeID = 9,
                            BranchID = 4,
                            FirstName = "Isaac",
                            HireDate = new DateTime(2022, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Walker",
                            Position = "Customer Service",
                            Salary = 42000.00m
                        },
                        new
                        {
                            EmployeeID = 10,
                            BranchID = 5,
                            FirstName = "Jasmine",
                            HireDate = new DateTime(2019, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Young",
                            Position = "Financial Advisor",
                            Salary = 67000.00m
                        });
                });

            modelBuilder.Entity("Riddle.Bank.Models.Loan", b =>
                {
                    b.Property<int>("LoanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("InterestRate")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("LoanType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("LoanID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Loans");

                    b.HasData(
                        new
                        {
                            LoanID = 1,
                            Amount = 5000.00m,
                            CustomerID = 1,
                            EndDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InterestRate = 5.5m,
                            LoanType = "Personal",
                            StartDate = new DateTime(2022, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            LoanID = 2,
                            Amount = 15000.00m,
                            CustomerID = 2,
                            EndDate = new DateTime(2027, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InterestRate = 3.8m,
                            LoanType = "Auto",
                            StartDate = new DateTime(2023, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            LoanID = 3,
                            Amount = 200000.00m,
                            CustomerID = 3,
                            EndDate = new DateTime(2041, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InterestRate = 4.2m,
                            LoanType = "Mortgage",
                            StartDate = new DateTime(2021, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            LoanID = 4,
                            Amount = 50000.00m,
                            CustomerID = 4,
                            EndDate = new DateTime(2025, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InterestRate = 6.0m,
                            LoanType = "Business",
                            StartDate = new DateTime(2020, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            LoanID = 5,
                            Amount = 10000.00m,
                            CustomerID = 5,
                            EndDate = new DateTime(2030, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InterestRate = 3.5m,
                            LoanType = "Education",
                            StartDate = new DateTime(2024, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            LoanID = 6,
                            Amount = 7000.00m,
                            CustomerID = 6,
                            EndDate = new DateTime(2026, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InterestRate = 5.0m,
                            LoanType = "Personal",
                            StartDate = new DateTime(2022, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            LoanID = 7,
                            Amount = 12000.00m,
                            CustomerID = 7,
                            EndDate = new DateTime(2027, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InterestRate = 4.0m,
                            LoanType = "Auto",
                            StartDate = new DateTime(2023, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            LoanID = 8,
                            Amount = 250000.00m,
                            CustomerID = 8,
                            EndDate = new DateTime(2042, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InterestRate = 4.5m,
                            LoanType = "Mortgage",
                            StartDate = new DateTime(2022, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            LoanID = 9,
                            Amount = 60000.00m,
                            CustomerID = 9,
                            EndDate = new DateTime(2026, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InterestRate = 6.2m,
                            LoanType = "Business",
                            StartDate = new DateTime(2021, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            LoanID = 10,
                            Amount = 12000.00m,
                            CustomerID = 10,
                            EndDate = new DateTime(2029, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InterestRate = 3.7m,
                            LoanType = "Education",
                            StartDate = new DateTime(2023, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Riddle.Bank.Models.LoanPayment", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InterestPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LoanID")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PrincipalPaid")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PaymentID");

                    b.HasIndex("LoanID");

                    b.ToTable("LoanPayments");

                    b.HasData(
                        new
                        {
                            PaymentID = 1,
                            Amount = 500.00m,
                            InterestPaid = 22.50m,
                            LoanID = 1,
                            PaymentDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PrincipalPaid = 477.50m
                        },
                        new
                        {
                            PaymentID = 2,
                            Amount = 500.00m,
                            InterestPaid = 21.75m,
                            LoanID = 1,
                            PaymentDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PrincipalPaid = 478.25m
                        },
                        new
                        {
                            PaymentID = 3,
                            Amount = 600.00m,
                            InterestPaid = 40.00m,
                            LoanID = 2,
                            PaymentDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PrincipalPaid = 560.00m
                        },
                        new
                        {
                            PaymentID = 4,
                            Amount = 2000.00m,
                            InterestPaid = 750.00m,
                            LoanID = 3,
                            PaymentDate = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PrincipalPaid = 1250.00m
                        },
                        new
                        {
                            PaymentID = 5,
                            Amount = 1000.00m,
                            InterestPaid = 300.00m,
                            LoanID = 4,
                            PaymentDate = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PrincipalPaid = 700.00m
                        },
                        new
                        {
                            PaymentID = 6,
                            Amount = 300.00m,
                            InterestPaid = 87.50m,
                            LoanID = 5,
                            PaymentDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PrincipalPaid = 212.50m
                        },
                        new
                        {
                            PaymentID = 7,
                            Amount = 700.00m,
                            InterestPaid = 35.00m,
                            LoanID = 6,
                            PaymentDate = new DateTime(2024, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PrincipalPaid = 665.00m
                        },
                        new
                        {
                            PaymentID = 8,
                            Amount = 700.00m,
                            InterestPaid = 48.00m,
                            LoanID = 7,
                            PaymentDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PrincipalPaid = 652.00m
                        },
                        new
                        {
                            PaymentID = 9,
                            Amount = 2500.00m,
                            InterestPaid = 1125.00m,
                            LoanID = 8,
                            PaymentDate = new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PrincipalPaid = 1375.00m
                        },
                        new
                        {
                            PaymentID = 10,
                            Amount = 1500.00m,
                            InterestPaid = 930.00m,
                            LoanID = 9,
                            PaymentDate = new DateTime(2024, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PrincipalPaid = 570.00m
                        });
                });

            modelBuilder.Entity("Riddle.Bank.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionID"));

                    b.Property<int>("AccountID")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TransactionID");

                    b.HasIndex("AccountID");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            TransactionID = 1,
                            AccountID = 1,
                            Amount = 500.00m,
                            Description = "Paycheck deposit",
                            TransactionDate = new DateTime(2024, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Deposit"
                        },
                        new
                        {
                            TransactionID = 2,
                            AccountID = 1,
                            Amount = 100.00m,
                            Description = "ATM withdrawal",
                            TransactionDate = new DateTime(2024, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Withdrawal"
                        },
                        new
                        {
                            TransactionID = 3,
                            AccountID = 2,
                            Amount = 200.00m,
                            Description = "Transfer to savings account",
                            TransactionDate = new DateTime(2024, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Transfer"
                        },
                        new
                        {
                            TransactionID = 4,
                            AccountID = 3,
                            Amount = 300.00m,
                            Description = "Deposit from freelance work",
                            TransactionDate = new DateTime(2024, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Deposit"
                        },
                        new
                        {
                            TransactionID = 5,
                            AccountID = 4,
                            Amount = 2000.00m,
                            Description = "Business expense payment",
                            TransactionDate = new DateTime(2024, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Payment"
                        },
                        new
                        {
                            TransactionID = 6,
                            AccountID = 5,
                            Amount = 150.00m,
                            Description = "Cash deposit",
                            TransactionDate = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Deposit"
                        },
                        new
                        {
                            TransactionID = 7,
                            AccountID = 6,
                            Amount = 50.00m,
                            Description = "Grocery shopping",
                            TransactionDate = new DateTime(2024, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Withdrawal"
                        },
                        new
                        {
                            TransactionID = 8,
                            AccountID = 7,
                            Amount = 500.00m,
                            Description = "Transfer from another account",
                            TransactionDate = new DateTime(2024, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Deposit"
                        },
                        new
                        {
                            TransactionID = 9,
                            AccountID = 8,
                            Amount = 1000.00m,
                            Description = "Supplier payment",
                            TransactionDate = new DateTime(2024, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Payment"
                        },
                        new
                        {
                            TransactionID = 10,
                            AccountID = 9,
                            Amount = 1000.00m,
                            Description = "Transfer to savings account",
                            TransactionDate = new DateTime(2024, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Transfer"
                        });
                });

            modelBuilder.Entity("Riddle.Bank.Models.Account", b =>
                {
                    b.HasOne("Riddle.Bank.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Riddle.Bank.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Riddle.Bank.Models.Card", b =>
                {
                    b.HasOne("Riddle.Bank.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Riddle.Bank.Models.CreditScore", b =>
                {
                    b.HasOne("Riddle.Bank.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Riddle.Bank.Models.Employee", b =>
                {
                    b.HasOne("Riddle.Bank.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("Riddle.Bank.Models.Loan", b =>
                {
                    b.HasOne("Riddle.Bank.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Riddle.Bank.Models.LoanPayment", b =>
                {
                    b.HasOne("Riddle.Bank.Models.Loan", "Loan")
                        .WithMany()
                        .HasForeignKey("LoanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("Riddle.Bank.Models.Transaction", b =>
                {
                    b.HasOne("Riddle.Bank.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });
#pragma warning restore 612, 618
        }
    }
}
