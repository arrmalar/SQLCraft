// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Riddle.Warehouse.TestCases.DataAccess.Data;

#nullable disable

namespace Riddle.Warehouse.TestCases.DataAccess.Migrations
{
    [DbContext(typeof(WarehouseTestCasesDbContext))]
    [Migration("20240819111329_dbInitData")]
    partial class dbInitData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            CategoryName = "Electronics"
                        },
                        new
                        {
                            CategoryID = 2,
                            CategoryName = "Books"
                        },
                        new
                        {
                            CategoryID = 3,
                            CategoryName = "Furniture"
                        },
                        new
                        {
                            CategoryID = 4,
                            CategoryName = "Clothing"
                        },
                        new
                        {
                            CategoryID = 5,
                            CategoryName = "Toys"
                        },
                        new
                        {
                            CategoryID = 6,
                            CategoryName = "Groceries"
                        },
                        new
                        {
                            CategoryID = 7,
                            CategoryName = "Health & Beauty"
                        },
                        new
                        {
                            CategoryID = 8,
                            CategoryName = "Sports & Outdoors"
                        },
                        new
                        {
                            CategoryID = 9,
                            CategoryName = "Home Appliances"
                        },
                        new
                        {
                            CategoryID = 10,
                            CategoryName = "Automotive"
                        },
                        new
                        {
                            CategoryID = 11,
                            CategoryName = "Jewelry"
                        },
                        new
                        {
                            CategoryID = 12,
                            CategoryName = "Pet Supplies"
                        },
                        new
                        {
                            CategoryID = 13,
                            CategoryName = "Office Supplies"
                        },
                        new
                        {
                            CategoryID = 14,
                            CategoryName = "Baby Products"
                        },
                        new
                        {
                            CategoryID = 15,
                            CategoryName = "Garden & Outdoor"
                        });
                });

            modelBuilder.Entity("ProductStock", b =>
                {
                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<int>("ProductStockID")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductID", "LocationID");

                    b.HasIndex("LocationID");

                    b.ToTable("ProductStocks");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            LocationID = 1,
                            ProductStockID = 0,
                            Quantity = 50
                        },
                        new
                        {
                            ProductID = 2,
                            LocationID = 3,
                            ProductStockID = 0,
                            Quantity = 20
                        },
                        new
                        {
                            ProductID = 3,
                            LocationID = 1,
                            ProductStockID = 0,
                            Quantity = 200
                        },
                        new
                        {
                            ProductID = 4,
                            LocationID = 3,
                            ProductStockID = 0,
                            Quantity = 30
                        },
                        new
                        {
                            ProductID = 5,
                            LocationID = 4,
                            ProductStockID = 0,
                            Quantity = 100
                        },
                        new
                        {
                            ProductID = 6,
                            LocationID = 5,
                            ProductStockID = 0,
                            Quantity = 150
                        },
                        new
                        {
                            ProductID = 7,
                            LocationID = 8,
                            ProductStockID = 0,
                            Quantity = 80
                        },
                        new
                        {
                            ProductID = 8,
                            LocationID = 8,
                            ProductStockID = 0,
                            Quantity = 120
                        },
                        new
                        {
                            ProductID = 9,
                            LocationID = 9,
                            ProductStockID = 0,
                            Quantity = 15
                        },
                        new
                        {
                            ProductID = 10,
                            LocationID = 10,
                            ProductStockID = 0,
                            Quantity = 300
                        },
                        new
                        {
                            ProductID = 11,
                            LocationID = 1,
                            ProductStockID = 0,
                            Quantity = 120
                        },
                        new
                        {
                            ProductID = 12,
                            LocationID = 3,
                            ProductStockID = 0,
                            Quantity = 25
                        },
                        new
                        {
                            ProductID = 13,
                            LocationID = 4,
                            ProductStockID = 0,
                            Quantity = 80
                        },
                        new
                        {
                            ProductID = 14,
                            LocationID = 5,
                            ProductStockID = 0,
                            Quantity = 60
                        },
                        new
                        {
                            ProductID = 15,
                            LocationID = 6,
                            ProductStockID = 0,
                            Quantity = 500
                        },
                        new
                        {
                            ProductID = 16,
                            LocationID = 7,
                            ProductStockID = 0,
                            Quantity = 200
                        },
                        new
                        {
                            ProductID = 17,
                            LocationID = 8,
                            ProductStockID = 0,
                            Quantity = 90
                        },
                        new
                        {
                            ProductID = 18,
                            LocationID = 9,
                            ProductStockID = 0,
                            Quantity = 10
                        },
                        new
                        {
                            ProductID = 19,
                            LocationID = 10,
                            ProductStockID = 0,
                            Quantity = 70
                        },
                        new
                        {
                            ProductID = 20,
                            LocationID = 1,
                            ProductStockID = 0,
                            Quantity = 50
                        },
                        new
                        {
                            ProductID = 21,
                            LocationID = 11,
                            ProductStockID = 0,
                            Quantity = 25
                        },
                        new
                        {
                            ProductID = 22,
                            LocationID = 12,
                            ProductStockID = 0,
                            Quantity = 300
                        },
                        new
                        {
                            ProductID = 23,
                            LocationID = 13,
                            ProductStockID = 0,
                            Quantity = 100
                        },
                        new
                        {
                            ProductID = 24,
                            LocationID = 14,
                            ProductStockID = 0,
                            Quantity = 50
                        },
                        new
                        {
                            ProductID = 25,
                            LocationID = 15,
                            ProductStockID = 0,
                            Quantity = 200
                        });
                });

            modelBuilder.Entity("PurchaseOrder", b =>
                {
                    b.Property<int>("PurchaseOrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseOrderID"));

                    b.Property<DateTime?>("ExpectedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SupplierID")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PurchaseOrderID");

                    b.HasIndex("SupplierID");

                    b.ToTable("PurchaseOrders");

                    b.HasData(
                        new
                        {
                            PurchaseOrderID = 1,
                            OrderDate = new DateTime(2024, 8, 19, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2739),
                            Status = "Pending",
                            SupplierID = 1,
                            TotalAmount = 4999.95m
                        },
                        new
                        {
                            PurchaseOrderID = 2,
                            OrderDate = new DateTime(2024, 8, 19, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2746),
                            Status = "Completed",
                            SupplierID = 2,
                            TotalAmount = 299.98m
                        },
                        new
                        {
                            PurchaseOrderID = 3,
                            OrderDate = new DateTime(2024, 8, 17, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2751),
                            Status = "Pending",
                            SupplierID = 3,
                            TotalAmount = 5999.99m
                        },
                        new
                        {
                            PurchaseOrderID = 4,
                            OrderDate = new DateTime(2024, 8, 14, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2758),
                            Status = "Shipped",
                            SupplierID = 4,
                            TotalAmount = 1199.85m
                        },
                        new
                        {
                            PurchaseOrderID = 5,
                            OrderDate = new DateTime(2024, 8, 9, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2802),
                            Status = "Cancelled",
                            SupplierID = 5,
                            TotalAmount = 749.75m
                        },
                        new
                        {
                            PurchaseOrderID = 6,
                            OrderDate = new DateTime(2024, 8, 4, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2807),
                            Status = "Completed",
                            SupplierID = 6,
                            TotalAmount = 2999.40m
                        },
                        new
                        {
                            PurchaseOrderID = 7,
                            OrderDate = new DateTime(2024, 7, 30, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2813),
                            Status = "Pending",
                            SupplierID = 7,
                            TotalAmount = 1999.80m
                        },
                        new
                        {
                            PurchaseOrderID = 8,
                            OrderDate = new DateTime(2024, 7, 25, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2818),
                            Status = "Completed",
                            SupplierID = 8,
                            TotalAmount = 1499.50m
                        },
                        new
                        {
                            PurchaseOrderID = 9,
                            OrderDate = new DateTime(2024, 7, 20, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2824),
                            Status = "Pending",
                            SupplierID = 9,
                            TotalAmount = 7499.85m
                        },
                        new
                        {
                            PurchaseOrderID = 10,
                            OrderDate = new DateTime(2024, 7, 15, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2830),
                            Status = "Shipped",
                            SupplierID = 10,
                            TotalAmount = 3749.50m
                        },
                        new
                        {
                            PurchaseOrderID = 11,
                            OrderDate = new DateTime(2024, 7, 10, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2835),
                            Status = "Pending",
                            SupplierID = 11,
                            TotalAmount = 29999.90m
                        },
                        new
                        {
                            PurchaseOrderID = 12,
                            OrderDate = new DateTime(2024, 7, 5, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2840),
                            Status = "Shipped",
                            SupplierID = 12,
                            TotalAmount = 899.70m
                        },
                        new
                        {
                            PurchaseOrderID = 13,
                            OrderDate = new DateTime(2024, 6, 30, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2846),
                            Status = "Completed",
                            SupplierID = 13,
                            TotalAmount = 14999.00m
                        },
                        new
                        {
                            PurchaseOrderID = 14,
                            OrderDate = new DateTime(2024, 6, 25, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2852),
                            Status = "Cancelled",
                            SupplierID = 14,
                            TotalAmount = 14999.50m
                        },
                        new
                        {
                            PurchaseOrderID = 15,
                            OrderDate = new DateTime(2024, 6, 20, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2857),
                            Status = "Pending",
                            SupplierID = 15,
                            TotalAmount = 3999.80m
                        });
                });

            modelBuilder.Entity("PurchaseOrderDetail", b =>
                {
                    b.Property<int>("PurchaseOrderDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseOrderDetailID"));

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseOrderID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PurchaseOrderDetailID");

                    b.HasIndex("ProductID");

                    b.HasIndex("PurchaseOrderID");

                    b.ToTable("PurchaseOrderDetails");

                    b.HasData(
                        new
                        {
                            PurchaseOrderDetailID = 1,
                            ProductID = 1,
                            PurchaseOrderID = 1,
                            Quantity = 5,
                            Total = 4999.95m,
                            UnitPrice = 999.99m
                        },
                        new
                        {
                            PurchaseOrderDetailID = 2,
                            ProductID = 5,
                            PurchaseOrderID = 2,
                            Quantity = 15,
                            Total = 299.85m,
                            UnitPrice = 19.99m
                        },
                        new
                        {
                            PurchaseOrderDetailID = 3,
                            ProductID = 12,
                            PurchaseOrderID = 3,
                            Quantity = 10,
                            Total = 5999.90m,
                            UnitPrice = 599.99m
                        },
                        new
                        {
                            PurchaseOrderDetailID = 4,
                            ProductID = 13,
                            PurchaseOrderID = 4,
                            Quantity = 30,
                            Total = 1199.70m,
                            UnitPrice = 39.99m
                        },
                        new
                        {
                            PurchaseOrderDetailID = 5,
                            ProductID = 6,
                            PurchaseOrderID = 5,
                            Quantity = 25,
                            Total = 749.75m,
                            UnitPrice = 29.99m
                        },
                        new
                        {
                            PurchaseOrderDetailID = 6,
                            ProductID = 15,
                            PurchaseOrderID = 6,
                            Quantity = 750,
                            Total = 2992.50m,
                            UnitPrice = 3.99m
                        },
                        new
                        {
                            PurchaseOrderDetailID = 7,
                            ProductID = 16,
                            PurchaseOrderID = 7,
                            Quantity = 200,
                            Total = 1998.00m,
                            UnitPrice = 9.99m
                        },
                        new
                        {
                            PurchaseOrderDetailID = 8,
                            ProductID = 14,
                            PurchaseOrderID = 8,
                            Quantity = 50,
                            Total = 1499.50m,
                            UnitPrice = 29.99m
                        },
                        new
                        {
                            PurchaseOrderDetailID = 9,
                            ProductID = 18,
                            PurchaseOrderID = 9,
                            Quantity = 15,
                            Total = 7499.85m,
                            UnitPrice = 499.99m
                        },
                        new
                        {
                            PurchaseOrderDetailID = 10,
                            ProductID = 19,
                            PurchaseOrderID = 10,
                            Quantity = 50,
                            Total = 3749.50m,
                            UnitPrice = 74.99m
                        },
                        new
                        {
                            PurchaseOrderDetailID = 11,
                            ProductID = 21,
                            PurchaseOrderID = 11,
                            Quantity = 10,
                            Total = 29999.90m,
                            UnitPrice = 2999.99m
                        },
                        new
                        {
                            PurchaseOrderDetailID = 12,
                            ProductID = 22,
                            PurchaseOrderID = 12,
                            Quantity = 30,
                            Total = 899.70m,
                            UnitPrice = 29.99m
                        },
                        new
                        {
                            PurchaseOrderDetailID = 13,
                            ProductID = 23,
                            PurchaseOrderID = 13,
                            Quantity = 100,
                            Total = 14999.00m,
                            UnitPrice = 149.99m
                        },
                        new
                        {
                            PurchaseOrderDetailID = 14,
                            ProductID = 24,
                            PurchaseOrderID = 14,
                            Quantity = 50,
                            Total = 14999.50m,
                            UnitPrice = 299.99m
                        },
                        new
                        {
                            PurchaseOrderDetailID = 15,
                            ProductID = 25,
                            PurchaseOrderID = 15,
                            Quantity = 200,
                            Total = 3999.80m,
                            UnitPrice = 19.99m
                        });
                });

            modelBuilder.Entity("Riddle.Warehouse.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("QuantityInStock")
                        .HasColumnType("int");

                    b.Property<int>("ReorderLevel")
                        .HasColumnType("int");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            CategoryID = 1,
                            DateAdded = new DateTime(2024, 8, 19, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2468),
                            ProductName = "Laptop",
                            QuantityInStock = 50,
                            ReorderLevel = 10,
                            SKU = "LPT123",
                            UnitPrice = 999.99m
                        },
                        new
                        {
                            ProductID = 2,
                            CategoryID = 3,
                            DateAdded = new DateTime(2024, 8, 19, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2476),
                            ProductName = "Desk Chair",
                            QuantityInStock = 20,
                            ReorderLevel = 5,
                            SKU = "DCH456",
                            UnitPrice = 149.99m
                        },
                        new
                        {
                            ProductID = 3,
                            CategoryID = 1,
                            DateAdded = new DateTime(2024, 8, 19, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2483),
                            ProductName = "Smartphone",
                            QuantityInStock = 200,
                            ReorderLevel = 50,
                            SKU = "SPH789",
                            UnitPrice = 799.99m
                        },
                        new
                        {
                            ProductID = 4,
                            CategoryID = 3,
                            DateAdded = new DateTime(2024, 8, 19, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2490),
                            ProductName = "Bookshelf",
                            QuantityInStock = 30,
                            ReorderLevel = 10,
                            SKU = "BSH123",
                            UnitPrice = 89.99m
                        },
                        new
                        {
                            ProductID = 5,
                            CategoryID = 4,
                            DateAdded = new DateTime(2024, 8, 19, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2495),
                            ProductName = "T-Shirt",
                            QuantityInStock = 100,
                            ReorderLevel = 20,
                            SKU = "TSH456",
                            UnitPrice = 19.99m
                        },
                        new
                        {
                            ProductID = 6,
                            CategoryID = 5,
                            DateAdded = new DateTime(2024, 8, 19, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2501),
                            ProductName = "Action Figure",
                            QuantityInStock = 150,
                            ReorderLevel = 30,
                            SKU = "AFG789",
                            UnitPrice = 29.99m
                        },
                        new
                        {
                            ProductID = 7,
                            CategoryID = 8,
                            DateAdded = new DateTime(2024, 8, 19, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2506),
                            ProductName = "Basketball",
                            QuantityInStock = 80,
                            ReorderLevel = 15,
                            SKU = "BKB123",
                            UnitPrice = 24.99m
                        },
                        new
                        {
                            ProductID = 8,
                            CategoryID = 8,
                            DateAdded = new DateTime(2024, 8, 19, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2512),
                            ProductName = "Running Shoes",
                            QuantityInStock = 120,
                            ReorderLevel = 25,
                            SKU = "RSH456",
                            UnitPrice = 59.99m
                        },
                        new
                        {
                            ProductID = 9,
                            CategoryID = 9,
                            DateAdded = new DateTime(2024, 8, 19, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2518),
                            ProductName = "Refrigerator",
                            QuantityInStock = 15,
                            ReorderLevel = 3,
                            SKU = "RFG789",
                            UnitPrice = 499.99m
                        },
                        new
                        {
                            ProductID = 10,
                            CategoryID = 10,
                            DateAdded = new DateTime(2024, 8, 19, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2523),
                            ProductName = "Car Tire",
                            QuantityInStock = 300,
                            ReorderLevel = 50,
                            SKU = "TIR123",
                            UnitPrice = 74.99m
                        },
                        new
                        {
                            ProductID = 11,
                            CategoryID = 1,
                            DateAdded = new DateTime(2024, 8, 19, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2530),
                            ProductName = "Tablet",
                            QuantityInStock = 120,
                            ReorderLevel = 20,
                            SKU = "TBL001",
                            UnitPrice = 399.99m
                        },
                        new
                        {
                            ProductID = 12,
                            CategoryID = 3,
                            DateAdded = new DateTime(2024, 8, 19, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2535),
                            ProductName = "Sofa",
                            QuantityInStock = 25,
                            ReorderLevel = 5,
                            SKU = "SFA234",
                            UnitPrice = 499.99m
                        },
                        new
                        {
                            ProductID = 13,
                            CategoryID = 4,
                            DateAdded = new DateTime(2024, 8, 19, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2540),
                            ProductName = "Dress",
                            QuantityInStock = 80,
                            ReorderLevel = 15,
                            SKU = "DRS345",
                            UnitPrice = 39.99m
                        },
                        new
                        {
                            ProductID = 14,
                            CategoryID = 5,
                            DateAdded = new DateTime(2024, 8, 19, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2546),
                            ProductName = "Board Game",
                            QuantityInStock = 60,
                            ReorderLevel = 10,
                            SKU = "BGM567",
                            UnitPrice = 29.99m
                        },
                        new
                        {
                            ProductID = 15,
                            CategoryID = 6,
                            DateAdded = new DateTime(2024, 8, 19, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2551),
                            ProductName = "Organic Milk",
                            QuantityInStock = 500,
                            ReorderLevel = 100,
                            SKU = "GRY678",
                            UnitPrice = 3.99m
                        },
                        new
                        {
                            ProductID = 16,
                            CategoryID = 7,
                            DateAdded = new DateTime(2024, 8, 19, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2557),
                            ProductName = "Vitamin C",
                            QuantityInStock = 200,
                            ReorderLevel = 50,
                            SKU = "HLT890",
                            UnitPrice = 9.99m
                        },
                        new
                        {
                            ProductID = 17,
                            CategoryID = 8,
                            DateAdded = new DateTime(2024, 8, 19, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2562),
                            ProductName = "Soccer Ball",
                            QuantityInStock = 90,
                            ReorderLevel = 15,
                            SKU = "SCR345",
                            UnitPrice = 19.99m
                        },
                        new
                        {
                            ProductID = 18,
                            CategoryID = 9,
                            DateAdded = new DateTime(2024, 8, 19, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2567),
                            ProductName = "Washing Machine",
                            QuantityInStock = 10,
                            ReorderLevel = 2,
                            SKU = "WMC123",
                            UnitPrice = 649.99m
                        },
                        new
                        {
                            ProductID = 19,
                            CategoryID = 10,
                            DateAdded = new DateTime(2024, 8, 19, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2573),
                            ProductName = "Car Battery",
                            QuantityInStock = 70,
                            ReorderLevel = 10,
                            SKU = "CBT456",
                            UnitPrice = 99.99m
                        },
                        new
                        {
                            ProductID = 20,
                            CategoryID = 1,
                            DateAdded = new DateTime(2024, 8, 19, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2579),
                            ProductName = "Gaming Console",
                            QuantityInStock = 50,
                            ReorderLevel = 10,
                            SKU = "GMC678",
                            UnitPrice = 399.99m
                        },
                        new
                        {
                            ProductID = 21,
                            CategoryID = 11,
                            DateAdded = new DateTime(2024, 8, 19, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2585),
                            ProductName = "Diamond Necklace",
                            QuantityInStock = 25,
                            ReorderLevel = 5,
                            SKU = "JWL123",
                            UnitPrice = 2999.99m
                        },
                        new
                        {
                            ProductID = 22,
                            CategoryID = 12,
                            DateAdded = new DateTime(2024, 8, 19, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2590),
                            ProductName = "Dog Food",
                            QuantityInStock = 300,
                            ReorderLevel = 50,
                            SKU = "PET456",
                            UnitPrice = 29.99m
                        },
                        new
                        {
                            ProductID = 23,
                            CategoryID = 13,
                            DateAdded = new DateTime(2024, 8, 19, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2595),
                            ProductName = "Office Chair",
                            QuantityInStock = 100,
                            ReorderLevel = 20,
                            SKU = "OFC789",
                            UnitPrice = 149.99m
                        },
                        new
                        {
                            ProductID = 24,
                            CategoryID = 14,
                            DateAdded = new DateTime(2024, 8, 19, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2601),
                            ProductName = "Baby Stroller",
                            QuantityInStock = 50,
                            ReorderLevel = 10,
                            SKU = "BBY123",
                            UnitPrice = 299.99m
                        },
                        new
                        {
                            ProductID = 25,
                            CategoryID = 15,
                            DateAdded = new DateTime(2024, 8, 19, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2607),
                            ProductName = "Garden Shovel",
                            QuantityInStock = 200,
                            ReorderLevel = 30,
                            SKU = "GRD456",
                            UnitPrice = 19.99m
                        });
                });

            modelBuilder.Entity("Shipment", b =>
                {
                    b.Property<int>("ShipmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShipmentID"));

                    b.Property<string>("Carrier")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ShipmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrackingNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ShipmentID");

                    b.ToTable("Shipments");

                    b.HasData(
                        new
                        {
                            ShipmentID = 1,
                            Carrier = "FedEx",
                            ShipmentDate = new DateTime(2024, 8, 18, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2970),
                            Status = "Shipped",
                            TrackingNumber = "TRACK123456"
                        },
                        new
                        {
                            ShipmentID = 2,
                            Carrier = "UPS",
                            ShipmentDate = new DateTime(2024, 8, 17, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2977),
                            Status = "In Transit",
                            TrackingNumber = "TRACK654321"
                        },
                        new
                        {
                            ShipmentID = 3,
                            Carrier = "DHL",
                            ShipmentDate = new DateTime(2024, 8, 16, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2984),
                            Status = "Delivered",
                            TrackingNumber = "TRACK987654"
                        },
                        new
                        {
                            ShipmentID = 4,
                            Carrier = "FedEx",
                            ShipmentDate = new DateTime(2024, 8, 15, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2988),
                            Status = "Pending",
                            TrackingNumber = "TRACK456789"
                        },
                        new
                        {
                            ShipmentID = 5,
                            Carrier = "UPS",
                            ShipmentDate = new DateTime(2024, 8, 14, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2993),
                            Status = "Cancelled",
                            TrackingNumber = "TRACK789123"
                        },
                        new
                        {
                            ShipmentID = 6,
                            Carrier = "DHL",
                            ShipmentDate = new DateTime(2024, 8, 13, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(2998),
                            Status = "In Transit",
                            TrackingNumber = "TRACK098765"
                        },
                        new
                        {
                            ShipmentID = 7,
                            Carrier = "FedEx",
                            ShipmentDate = new DateTime(2024, 8, 12, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(3005),
                            Status = "Delivered",
                            TrackingNumber = "TRACK543210"
                        },
                        new
                        {
                            ShipmentID = 8,
                            Carrier = "UPS",
                            ShipmentDate = new DateTime(2024, 8, 11, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(3010),
                            Status = "Shipped",
                            TrackingNumber = "TRACK876543"
                        },
                        new
                        {
                            ShipmentID = 9,
                            Carrier = "DHL",
                            ShipmentDate = new DateTime(2024, 8, 10, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(3015),
                            Status = "Pending",
                            TrackingNumber = "TRACK345678"
                        },
                        new
                        {
                            ShipmentID = 10,
                            Carrier = "FedEx",
                            ShipmentDate = new DateTime(2024, 8, 9, 13, 13, 28, 937, DateTimeKind.Local).AddTicks(3020),
                            Status = "Cancelled",
                            TrackingNumber = "TRACK123789"
                        });
                });

            modelBuilder.Entity("ShipmentDetail", b =>
                {
                    b.Property<int>("ShipmentDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShipmentDetailID"));

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ShipmentID")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ShipmentDetailID");

                    b.HasIndex("ProductID");

                    b.HasIndex("ShipmentID");

                    b.ToTable("ShipmentDetails");

                    b.HasData(
                        new
                        {
                            ShipmentDetailID = 1,
                            ProductID = 1,
                            Quantity = 5,
                            ShipmentID = 1,
                            Total = 4999.95m,
                            UnitPrice = 999.99m
                        },
                        new
                        {
                            ShipmentDetailID = 2,
                            ProductID = 3,
                            Quantity = 20,
                            ShipmentID = 2,
                            Total = 15999.80m,
                            UnitPrice = 799.99m
                        },
                        new
                        {
                            ShipmentDetailID = 3,
                            ProductID = 4,
                            Quantity = 10,
                            ShipmentID = 3,
                            Total = 899.90m,
                            UnitPrice = 89.99m
                        },
                        new
                        {
                            ShipmentDetailID = 4,
                            ProductID = 7,
                            Quantity = 15,
                            ShipmentID = 4,
                            Total = 374.85m,
                            UnitPrice = 24.99m
                        },
                        new
                        {
                            ShipmentDetailID = 5,
                            ProductID = 10,
                            Quantity = 25,
                            ShipmentID = 5,
                            Total = 1874.75m,
                            UnitPrice = 74.99m
                        },
                        new
                        {
                            ShipmentDetailID = 6,
                            ProductID = 11,
                            Quantity = 30,
                            ShipmentID = 6,
                            Total = 11999.70m,
                            UnitPrice = 399.99m
                        },
                        new
                        {
                            ShipmentDetailID = 7,
                            ProductID = 15,
                            Quantity = 300,
                            ShipmentID = 7,
                            Total = 1197.00m,
                            UnitPrice = 3.99m
                        },
                        new
                        {
                            ShipmentDetailID = 8,
                            ProductID = 21,
                            Quantity = 10,
                            ShipmentID = 8,
                            Total = 29999.90m,
                            UnitPrice = 2999.99m
                        },
                        new
                        {
                            ShipmentDetailID = 9,
                            ProductID = 25,
                            Quantity = 50,
                            ShipmentID = 9,
                            Total = 999.50m,
                            UnitPrice = 19.99m
                        });
                });

            modelBuilder.Entity("StockLocation", b =>
                {
                    b.Property<int>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("LocationID");

                    b.ToTable("StockLocations");

                    b.HasData(
                        new
                        {
                            LocationID = 1,
                            Description = "Main warehouse for electronics",
                            LocationName = "Warehouse A"
                        },
                        new
                        {
                            LocationID = 2,
                            Description = "Secondary warehouse for books",
                            LocationName = "Warehouse B"
                        },
                        new
                        {
                            LocationID = 3,
                            Description = "Warehouse for furniture",
                            LocationName = "Warehouse C"
                        },
                        new
                        {
                            LocationID = 4,
                            Description = "Clothing warehouse",
                            LocationName = "Warehouse D"
                        },
                        new
                        {
                            LocationID = 5,
                            Description = "Toys warehouse",
                            LocationName = "Warehouse E"
                        },
                        new
                        {
                            LocationID = 6,
                            Description = "Groceries storage",
                            LocationName = "Warehouse F"
                        },
                        new
                        {
                            LocationID = 7,
                            Description = "Health & Beauty products",
                            LocationName = "Warehouse G"
                        },
                        new
                        {
                            LocationID = 8,
                            Description = "Sports equipment",
                            LocationName = "Warehouse H"
                        },
                        new
                        {
                            LocationID = 9,
                            Description = "Home appliances",
                            LocationName = "Warehouse I"
                        },
                        new
                        {
                            LocationID = 10,
                            Description = "Automotive parts storage",
                            LocationName = "Warehouse J"
                        },
                        new
                        {
                            LocationID = 11,
                            Description = "Jewelry storage",
                            LocationName = "Warehouse K"
                        },
                        new
                        {
                            LocationID = 12,
                            Description = "Pet supplies storage",
                            LocationName = "Warehouse L"
                        },
                        new
                        {
                            LocationID = 13,
                            Description = "Office supplies storage",
                            LocationName = "Warehouse M"
                        },
                        new
                        {
                            LocationID = 14,
                            Description = "Baby products storage",
                            LocationName = "Warehouse N"
                        },
                        new
                        {
                            LocationID = 15,
                            Description = "Garden & outdoor storage",
                            LocationName = "Warehouse O"
                        });
                });

            modelBuilder.Entity("Supplier", b =>
                {
                    b.Property<int>("SupplierID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SupplierID");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            SupplierID = 1,
                            Address = "123 Tech Road",
                            City = "Techville",
                            ContactName = "John Doe",
                            Country = "USA",
                            Email = "contact@techsupplies.com",
                            Phone = "123-456-7890",
                            PostalCode = "12345",
                            SupplierName = "Tech Supplies Inc."
                        },
                        new
                        {
                            SupplierID = 2,
                            Address = "456 Book St",
                            City = "Readville",
                            ContactName = "Jane Smith",
                            Country = "USA",
                            Email = "info@booksandmore.com",
                            Phone = "987-654-3210",
                            PostalCode = "67890",
                            SupplierName = "Books and More"
                        },
                        new
                        {
                            SupplierID = 3,
                            Address = "789 Furnish Ave",
                            City = "Furniture City",
                            ContactName = "Mike Johnson",
                            Country = "USA",
                            Email = "sales@furnishingsdepot.com",
                            Phone = "555-123-4567",
                            PostalCode = "23456",
                            SupplierName = "Furnishings Depot"
                        },
                        new
                        {
                            SupplierID = 4,
                            Address = "101 Fashion Blvd",
                            City = "Style Town",
                            ContactName = "Emily Davis",
                            Country = "USA",
                            Email = "info@apparelworld.com",
                            Phone = "555-234-5678",
                            PostalCode = "34567",
                            SupplierName = "Apparel World"
                        },
                        new
                        {
                            SupplierID = 5,
                            Address = "202 Play St",
                            City = "Toyland",
                            ContactName = "Kevin Brown",
                            Country = "USA",
                            Email = "contact@toykingdom.com",
                            Phone = "555-345-6789",
                            PostalCode = "45678",
                            SupplierName = "Toy Kingdom"
                        },
                        new
                        {
                            SupplierID = 6,
                            Address = "303 Farm Road",
                            City = "AgriCity",
                            ContactName = "Sarah Green",
                            Country = "USA",
                            Email = "info@freshfoods.com",
                            Phone = "555-456-7890",
                            PostalCode = "56789",
                            SupplierName = "Fresh Foods Ltd."
                        },
                        new
                        {
                            SupplierID = 7,
                            Address = "404 Health Ave",
                            City = "Wellness",
                            ContactName = "Tom White",
                            Country = "USA",
                            Email = "support@healthcorp.com",
                            Phone = "555-567-8901",
                            PostalCode = "67890",
                            SupplierName = "HealthCorp"
                        },
                        new
                        {
                            SupplierID = 8,
                            Address = "505 Sports Blvd",
                            City = "Athletica",
                            ContactName = "Rachel Brown",
                            Country = "USA",
                            Email = "sales@sportinggoods.com",
                            Phone = "555-678-9012",
                            PostalCode = "78901",
                            SupplierName = "Sporting Goods Co."
                        },
                        new
                        {
                            SupplierID = 9,
                            Address = "606 Home Lane",
                            City = "Appliancetown",
                            ContactName = "Gary Gray",
                            Country = "USA",
                            Email = "contact@hometech.com",
                            Phone = "555-789-0123",
                            PostalCode = "89012",
                            SupplierName = "HomeTech"
                        },
                        new
                        {
                            SupplierID = 10,
                            Address = "707 Car St",
                            City = "Motor City",
                            ContactName = "Linda Black",
                            Country = "USA",
                            Email = "sales@autoparts.com",
                            Phone = "555-890-1234",
                            PostalCode = "90123",
                            SupplierName = "Auto Parts Inc."
                        },
                        new
                        {
                            SupplierID = 11,
                            Address = "808 Jewel Ave",
                            City = "Bling City",
                            ContactName = "Sophia Rose",
                            Country = "USA",
                            Email = "support@glamourjewels.com",
                            Phone = "555-789-4567",
                            PostalCode = "23457",
                            SupplierName = "Glamour Jewels"
                        },
                        new
                        {
                            SupplierID = 12,
                            Address = "909 Pet Lane",
                            City = "Pawtown",
                            ContactName = "Brian Gold",
                            Country = "USA",
                            Email = "info@petessentials.com",
                            Phone = "555-890-5678",
                            PostalCode = "34568",
                            SupplierName = "Pet Essentials"
                        },
                        new
                        {
                            SupplierID = 13,
                            Address = "101 Office Blvd",
                            City = "Worksville",
                            ContactName = "Nina Green",
                            Country = "USA",
                            Email = "sales@officepro.com",
                            Phone = "555-901-6789",
                            PostalCode = "45679",
                            SupplierName = "OfficePro"
                        },
                        new
                        {
                            SupplierID = 14,
                            Address = "202 Baby St",
                            City = "Nurture City",
                            ContactName = "Laura White",
                            Country = "USA",
                            Email = "support@babycare.com",
                            Phone = "555-012-7890",
                            PostalCode = "56780",
                            SupplierName = "Baby Care Ltd."
                        },
                        new
                        {
                            SupplierID = 15,
                            Address = "303 Garden Ave",
                            City = "Growtown",
                            ContactName = "Henry Black",
                            Country = "USA",
                            Email = "info@greenthumb.com",
                            Phone = "555-123-8901",
                            PostalCode = "67891",
                            SupplierName = "Green Thumb"
                        });
                });

            modelBuilder.Entity("ProductStock", b =>
                {
                    b.HasOne("StockLocation", "StockLocation")
                        .WithMany("ProductStocks")
                        .HasForeignKey("LocationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Riddle.Warehouse.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("StockLocation");
                });

            modelBuilder.Entity("PurchaseOrder", b =>
                {
                    b.HasOne("Supplier", "Supplier")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("PurchaseOrderDetail", b =>
                {
                    b.HasOne("Riddle.Warehouse.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PurchaseOrder", "PurchaseOrder")
                        .WithMany("PurchaseOrderDetails")
                        .HasForeignKey("PurchaseOrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("Riddle.Warehouse.Models.Product", b =>
                {
                    b.HasOne("Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ShipmentDetail", b =>
                {
                    b.HasOne("Riddle.Warehouse.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shipment", "Shipment")
                        .WithMany("ShipmentDetails")
                        .HasForeignKey("ShipmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PurchaseOrder", b =>
                {
                    b.Navigation("PurchaseOrderDetails");
                });

            modelBuilder.Entity("Shipment", b =>
                {
                    b.Navigation("ShipmentDetails");
                });

            modelBuilder.Entity("StockLocation", b =>
                {
                    b.Navigation("ProductStocks");
                });

            modelBuilder.Entity("Supplier", b =>
                {
                    b.Navigation("PurchaseOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
