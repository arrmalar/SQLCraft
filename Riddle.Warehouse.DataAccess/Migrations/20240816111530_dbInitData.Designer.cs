// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Riddle.Warehouse.DataAccess.Data;

#nullable disable

namespace Riddle.Warehouse.DataAccess.Migrations
{
    [DbContext(typeof(WarehouseDbContext))]
    [Migration("20240816111530_dbInitData")]
    partial class dbInitData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            CategoryName = "Electronics"
                        },
                        new
                        {
                            CategoryID = 2,
                            CategoryName = "Books"
                        },
                        new
                        {
                            CategoryID = 3,
                            CategoryName = "Furniture"
                        });
                });

            modelBuilder.Entity("ProductStock", b =>
                {
                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<int>("ProductStockID")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductID", "LocationID");

                    b.HasIndex("LocationID");

                    b.ToTable("ProductStocks");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            LocationID = 1,
                            ProductStockID = 0,
                            Quantity = 50
                        },
                        new
                        {
                            ProductID = 2,
                            LocationID = 2,
                            ProductStockID = 0,
                            Quantity = 20
                        });
                });

            modelBuilder.Entity("PurchaseOrder", b =>
                {
                    b.Property<int>("PurchaseOrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseOrderID"));

                    b.Property<DateTime?>("ExpectedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SupplierID")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PurchaseOrderID");

                    b.HasIndex("SupplierID");

                    b.ToTable("PurchaseOrders");

                    b.HasData(
                        new
                        {
                            PurchaseOrderID = 1,
                            OrderDate = new DateTime(2024, 8, 16, 13, 15, 29, 852, DateTimeKind.Local).AddTicks(8033),
                            Status = "Pending",
                            SupplierID = 1,
                            TotalAmount = 4999.95m
                        },
                        new
                        {
                            PurchaseOrderID = 2,
                            OrderDate = new DateTime(2024, 8, 16, 13, 15, 29, 852, DateTimeKind.Local).AddTicks(8046),
                            Status = "Completed",
                            SupplierID = 2,
                            TotalAmount = 299.98m
                        });
                });

            modelBuilder.Entity("PurchaseOrderDetail", b =>
                {
                    b.Property<int>("PurchaseOrderDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseOrderDetailID"));

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseOrderID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PurchaseOrderDetailID");

                    b.HasIndex("ProductID");

                    b.HasIndex("PurchaseOrderID");

                    b.ToTable("PurchaseOrderDetails");

                    b.HasData(
                        new
                        {
                            PurchaseOrderDetailID = 1,
                            ProductID = 1,
                            PurchaseOrderID = 1,
                            Quantity = 5,
                            Total = 4999.95m,
                            UnitPrice = 999.99m
                        });
                });

            modelBuilder.Entity("Riddle.Warehouse.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("QuantityInStock")
                        .HasColumnType("int");

                    b.Property<int>("ReorderLevel")
                        .HasColumnType("int");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            CategoryID = 1,
                            DateAdded = new DateTime(2024, 8, 16, 13, 15, 29, 852, DateTimeKind.Local).AddTicks(7917),
                            ProductName = "Laptop",
                            QuantityInStock = 50,
                            ReorderLevel = 10,
                            SKU = "LPT123",
                            UnitPrice = 999.99m
                        },
                        new
                        {
                            ProductID = 2,
                            CategoryID = 3,
                            DateAdded = new DateTime(2024, 8, 16, 13, 15, 29, 852, DateTimeKind.Local).AddTicks(7930),
                            ProductName = "Desk Chair",
                            QuantityInStock = 20,
                            ReorderLevel = 5,
                            SKU = "DCH456",
                            UnitPrice = 149.99m
                        });
                });

            modelBuilder.Entity("Shipment", b =>
                {
                    b.Property<int>("ShipmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShipmentID"));

                    b.Property<string>("Carrier")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ShipmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrackingNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ShipmentID");

                    b.ToTable("Shipments");

                    b.HasData(
                        new
                        {
                            ShipmentID = 1,
                            Carrier = "FedEx",
                            ShipmentDate = new DateTime(2024, 8, 16, 13, 15, 29, 852, DateTimeKind.Local).AddTicks(8143),
                            Status = "Shipped",
                            TrackingNumber = "TRACK123456"
                        });
                });

            modelBuilder.Entity("ShipmentDetail", b =>
                {
                    b.Property<int>("ShipmentDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShipmentDetailID"));

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ShipmentID")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ShipmentDetailID");

                    b.HasIndex("ProductID");

                    b.HasIndex("ShipmentID");

                    b.ToTable("ShipmentDetails");

                    b.HasData(
                        new
                        {
                            ShipmentDetailID = 1,
                            ProductID = 1,
                            Quantity = 5,
                            ShipmentID = 1,
                            Total = 4999.95m,
                            UnitPrice = 999.99m
                        });
                });

            modelBuilder.Entity("StockLocation", b =>
                {
                    b.Property<int>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("LocationID");

                    b.ToTable("StockLocations");

                    b.HasData(
                        new
                        {
                            LocationID = 1,
                            Description = "Main warehouse for electronics",
                            LocationName = "Warehouse A"
                        },
                        new
                        {
                            LocationID = 2,
                            Description = "Secondary warehouse for books",
                            LocationName = "Warehouse B"
                        });
                });

            modelBuilder.Entity("Supplier", b =>
                {
                    b.Property<int>("SupplierID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SupplierID");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            SupplierID = 1,
                            Address = "123 Tech Road",
                            City = "Techville",
                            ContactName = "John Doe",
                            Country = "USA",
                            Email = "contact@techsupplies.com",
                            Phone = "123-456-7890",
                            PostalCode = "12345",
                            SupplierName = "Tech Supplies Inc."
                        },
                        new
                        {
                            SupplierID = 2,
                            Address = "456 Book St",
                            City = "Readville",
                            ContactName = "Jane Smith",
                            Country = "USA",
                            Email = "info@booksandmore.com",
                            Phone = "987-654-3210",
                            PostalCode = "67890",
                            SupplierName = "Books and More"
                        });
                });

            modelBuilder.Entity("ProductStock", b =>
                {
                    b.HasOne("StockLocation", "StockLocation")
                        .WithMany("ProductStocks")
                        .HasForeignKey("LocationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Riddle.Warehouse.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("StockLocation");
                });

            modelBuilder.Entity("PurchaseOrder", b =>
                {
                    b.HasOne("Supplier", "Supplier")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("PurchaseOrderDetail", b =>
                {
                    b.HasOne("Riddle.Warehouse.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PurchaseOrder", "PurchaseOrder")
                        .WithMany("PurchaseOrderDetails")
                        .HasForeignKey("PurchaseOrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("Riddle.Warehouse.Models.Product", b =>
                {
                    b.HasOne("Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ShipmentDetail", b =>
                {
                    b.HasOne("Riddle.Warehouse.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shipment", "Shipment")
                        .WithMany("ShipmentDetails")
                        .HasForeignKey("ShipmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PurchaseOrder", b =>
                {
                    b.Navigation("PurchaseOrderDetails");
                });

            modelBuilder.Entity("Shipment", b =>
                {
                    b.Navigation("ShipmentDetails");
                });

            modelBuilder.Entity("StockLocation", b =>
                {
                    b.Navigation("ProductStocks");
                });

            modelBuilder.Entity("Supplier", b =>
                {
                    b.Navigation("PurchaseOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
